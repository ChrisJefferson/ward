diff lpeg.c
--- lpeg.c	Mon Feb 14 18:54:10 2011 +0000
+++ lpeg.c	Mon Feb 14 19:20:19 2011 +0000
@@ -75,8 +75,11 @@
 /* index, on Lua stack, for pattern's fenv */
 #define penvidx(ptop)	((ptop) + 3)
 
+/* index, on Lua stack, for capture table */
+#define dyncaptidx(ptop)	((ptop) + 4)
+
 /* index, on Lua stack, for backtracking stack */
-#define stackidx(ptop)	((ptop) + 4)
+#define stackidx(ptop)	((ptop) + 5)
 
 
 
@@ -185,7 +188,7 @@
 
 typedef struct Capture {
   const char *s;  /* position */
-  short idx;
+  int idx;
   byte kind;
   byte siz;
 } Capture;
@@ -381,6 +384,19 @@
 
 #define getstackbase(L, ptop)	((Stack *)lua_touserdata(L, stackidx(ptop)))
 
+static int storedyncapture(lua_State *L, int idx, int ptop) {
+  int dyncapttable = dyncaptidx(ptop);
+  int size = lua_objlen(L, dyncapttable);
+  lua_pushvalue(L, idx);
+  lua_rawseti(L, dyncapttable, size+1);
+  return size+1;
+}
+
+static void pushdyncapture(lua_State *L, int idx, int ptop) {
+  int dyncapttable = dyncaptidx(ptop);
+  lua_rawgeti(L, dyncapttable, idx);
+}
+
 
 static int runtimecap (lua_State *L, Capture *close, Capture *ocap,
                        const char *o, const char *s, int ptop);
@@ -417,15 +433,16 @@
 }
 
 
-static void adddyncaptures (const char *s, Capture *base, int n, int fd) {
+static void adddyncaptures (lua_State *L,
+  const char *s, Capture *base, int n, int fd, int ptop) {
   int i;
   assert(base[0].kind == Cruntime && base[0].siz == 0);
-  base[0].idx = fd;  /* first returned capture */
+  base[0].idx = storedyncapture(L, fd, ptop);  /* first returned capture */
   for (i = 1; i < n; i++) {  /* add extra captures */
     base[i].siz = 1;  /* mark it as closed */
     base[i].s = s;
     base[i].kind = Cruntime;
-    base[i].idx = fd + i;  /* stack index */
+    base[i].idx = storedyncapture(L, fd + i, ptop);  /* stack index */
   }
   base[n].kind = Cclose;  /* add closing entry */
   base[n].siz = 1;
@@ -586,7 +603,8 @@
             capture = doublecap(L, capture, captop, ptop);
             capsize = 2 * captop;
           }
-          adddyncaptures(s, capture + captop - n - 1, n, fr);
+          adddyncaptures(L, s, capture + captop - n - 1, n, fr, ptop);
+	  lua_settop(L, fr - 1); /* pop results */
         }
         p++;
         continue;
@@ -2191,7 +2209,7 @@
       int n = 0;
       while (!isclosecap(cs->cap++)) {
         luaL_checkstack(cs->L, 4, "too many captures");
-        lua_pushvalue(cs->L, (cs->cap - 1)->idx);
+	pushdyncapture(cs->L, (cs->cap - 1)->idx, cs->ptop);
         n++;
       }
       return n;
@@ -2340,6 +2358,7 @@
   lua_pushnil(L);  /* subscache */
   lua_pushlightuserdata(L, capture);  /* caplistidx */
   lua_getfenv(L, 1);  /* penvidx */
+  lua_createtable(L, 32, 0); /* runtime captures */
   r = match(L, s, s + i, s + l, p, capture, ptop);
   if (r == NULL) {
     lua_pushnil(L);
